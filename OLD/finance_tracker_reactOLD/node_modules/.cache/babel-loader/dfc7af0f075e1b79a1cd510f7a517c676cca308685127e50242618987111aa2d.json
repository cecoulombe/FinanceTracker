{"ast":null,"code":"import'./App.css';import React,{useState,useEffect}from'react';import{getExchangeRates}from'./currencyApi';import strings from'./strings.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// currency state\nconst[selectedCurrency,setSelectedCurrency]=useState(()=>{const storedCurrency=localStorage.getItem('chosenCurrency')||'CAD';console.log('Loaded currency choice from localStorage: ',storedCurrency);return storedCurrency;});// exchange rates\nconst[exchangeRates,setExchangeRates]=useState({});// states specifically for assets and liabilities\nconst[assets,setAssets]=useState(()=>{const storedAssets=JSON.parse(localStorage.getItem('assets'))||[{label:'',amount:0}];console.log('Loaded assets from localStorage: ',storedAssets);return storedAssets;});const[liabilities,setLiabilities]=useState(()=>{const storedLiabilities=JSON.parse(localStorage.getItem('liabilities'))||[{label:'',amount:0}];console.log('Loaded liabilities from localStorage: ',storedLiabilities);return storedLiabilities;});// save data to localStorage whenever anything changes\nuseEffect(()=>{console.log('Saving assets to localStorage: ',assets);localStorage.setItem('assets',JSON.stringify(assets));console.log('Saving liabilities to localStorage: ',liabilities);localStorage.setItem('liabilities',JSON.stringify(liabilities));console.log('Saving currency choice to localStorage: ',selectedCurrency);localStorage.setItem('chosenCurrency',selectedCurrency);},[assets,liabilities,selectedCurrency]);// dependency array - this useEffect will run whenever any of the values in the array are changed\n// load exchange rates\nuseEffect(()=>{const fetchExchangeRates=async()=>{console.log(\"!!!!! The currency being sent to the API is: \",selectedCurrency);const rates=await getExchangeRates(selectedCurrency);if(rates){setExchangeRates(rates);}};fetchExchangeRates();},[selectedCurrency]);// dependency array - this useEffect will run whenever any of the values in the array are changed\nconst updateAmounts=(amounts,rate)=>{return amounts.map(amount=>{const parsedAmount=parseFloat(amount);// Parse as float\nreturn(parsedAmount*rate).toFixed(2);// Calculate and format to 2 decimal places\n});};const handleCurrencyChange=e=>{const targetCurrency=e.target.value;setSelectedCurrency(targetCurrency);if(exchangeRates[targetCurrency]){const rate=exchangeRates[targetCurrency];// Update assets\nconst updatedAssets=updateAmounts(assets.map(asset=>asset.amount),rate);setAssets(prevAssets=>prevAssets.map((asset,index)=>({...asset,amount:parseFloat(updatedAssets[index])// Ensure it's a number\n})));// Update liabilities\nconst updatedLiabilities=updateAmounts(liabilities.map(liability=>liability.amount),rate);setLiabilities(prevLiabilities=>prevLiabilities.map((liability,index)=>({...liability,amount:parseFloat(updatedLiabilities[index])// Ensure it's a number\n})));}else{console.log(\"Exchange rates not available for target currency\");}};// assets management\nconst addAsset=()=>{setAssets([...assets,{label:'',amount:0}]);};const handleAssetChange=(index,field,value)=>{const updatedAssets=[...assets];if(field==='amount'){// Check for valid number input\nif(value===\"\"||/^[0-9]*(\\.[0-9]{0,2})?$/.test(value)){const parsedValue=parseFloat(value);updatedAssets[index][field]=isNaN(parsedValue)?0:parseFloat(parsedValue.toFixed(2));}}else{updatedAssets[index][field]=value;}setAssets(updatedAssets);};// liability management\nconst addLiability=()=>{setLiabilities([...liabilities,{label:'',amount:0}]);};const handleLiabilityChange=(index,field,value)=>{const updatedLiabilities=[...liabilities];if(field==='amount'){// Check for valid number input\nif(value===\"\"||/^[0-9]*(\\.[0-9]{0,2})?$/.test(value)){const parsedValue=parseFloat(value);updatedLiabilities[index][field]=isNaN(parsedValue)?0:parseFloat(parsedValue.toFixed(2));}}else{updatedLiabilities[index][field]=value;}setLiabilities(updatedLiabilities);};// currency symbols\nconst currencySymbolOptions={CAD:'C$',USD:'$',EUR:'€',TRY:'₺'};const currencySymbol=currencySymbolOptions[selectedCurrency];// calculate the sum\nconst sumAssets=assets.reduce((acc,curr)=>acc+parseFloat(curr.amount||0),0);const sumLiabilities=liabilities.reduce((acc,curr)=>acc+parseFloat(curr.amount||0),0);const netWorth=(isNaN(sumAssets)?0:sumAssets)-(isNaN(sumLiabilities)?0:sumLiabilities);console.log(\"Assets are: \",sumAssets);console.log(\"Liabilities are: \",sumLiabilities);console.log(\"Net worth is: \",netWorth);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:strings.pageTitle}),/*#__PURE__*/_jsxs(\"div\",{className:\"topRight\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"currency\",children:strings.currencyLabel}),/*#__PURE__*/_jsxs(\"select\",{name:\"currency\",id:\"currency\",value:selectedCurrency,onChange:handleCurrencyChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"CAD\",children:strings.cad}),/*#__PURE__*/_jsx(\"option\",{value:\"USD\",children:strings.usd}),/*#__PURE__*/_jsx(\"option\",{value:\"EUR\",children:strings.eur}),/*#__PURE__*/_jsx(\"option\",{value:\"TRY\",children:strings.try})]})]}),/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"form\",{id:\"assetForm\",children:[/*#__PURE__*/_jsxs(\"table\",{id:\"assetTable\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:strings.assetTitle}),/*#__PURE__*/_jsx(\"th\",{children:strings.amountTitle})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:assets.map((asset,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Asset\",value:asset.label,onChange:e=>handleAssetChange(index,'label',e.target.value)})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"0.00\",step:\"0.01\",value:asset.amount||'',onChange:e=>handleAssetChange(index,'amount',e.target.value)})})]},index))})]}),/*#__PURE__*/_jsxs(\"h4\",{children:[strings.assetsSum,currencySymbol,sumAssets.toFixed(2)]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:addAsset,children:strings.addAssetButton})]})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"p\",{children:strings.assetsDescription})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"form\",{id:\"liabilityForm\",children:[/*#__PURE__*/_jsxs(\"table\",{id:\"liabilityTable\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:strings.liabilityTitle}),/*#__PURE__*/_jsx(\"th\",{children:strings.amountTitle})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:liabilities.map((liability,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Liability\",value:liability.label,onChange:e=>handleLiabilityChange(index,'label',e.target.value)})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"0.00\",step:\"0.01\",value:liability.amount||'',onChange:e=>handleLiabilityChange(index,'amount',e.target.value)})})]},index))})]}),/*#__PURE__*/_jsxs(\"h4\",{children:[strings.liabilitiesSum,\"-\",currencySymbol,sumLiabilities.toFixed(2)]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:addLiability,children:strings.addLiabilityButton})]})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"p\",{children:strings.liabilitiesDescription})})]})})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"h2\",{children:[strings.netWorth,/*#__PURE__*/_jsxs(\"span\",{className:netWorth>=0?'positive':'negative',children:[currencySymbol,netWorth.toFixed(2)]})]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","getExchangeRates","strings","jsx","_jsx","jsxs","_jsxs","App","selectedCurrency","setSelectedCurrency","storedCurrency","localStorage","getItem","console","log","exchangeRates","setExchangeRates","assets","setAssets","storedAssets","JSON","parse","label","amount","liabilities","setLiabilities","storedLiabilities","setItem","stringify","fetchExchangeRates","rates","updateAmounts","amounts","rate","map","parsedAmount","parseFloat","toFixed","handleCurrencyChange","e","targetCurrency","target","value","updatedAssets","asset","prevAssets","index","updatedLiabilities","liability","prevLiabilities","addAsset","handleAssetChange","field","test","parsedValue","isNaN","addLiability","handleLiabilityChange","currencySymbolOptions","CAD","USD","EUR","TRY","currencySymbol","sumAssets","reduce","acc","curr","sumLiabilities","netWorth","children","pageTitle","className","htmlFor","currencyLabel","name","id","onChange","cad","usd","eur","try","assetTitle","amountTitle","type","placeholder","step","assetsSum","onClick","addAssetButton","assetsDescription","liabilityTitle","liabilitiesSum","addLiabilityButton","liabilitiesDescription"],"sources":["/Users/caitlincoulombe/GitHub/FinanceTracker/finance_tracker_react/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport {getExchangeRates} from './currencyApi';\nimport strings from './strings.js';\n\nfunction App() {\n  // currency state\n  const [selectedCurrency, setSelectedCurrency] = useState(() => {\n    const storedCurrency = localStorage.getItem('chosenCurrency') || ('CAD');\n    console.log('Loaded currency choice from localStorage: ', storedCurrency);\n    return storedCurrency;\n  });\n\n  // exchange rates\n  const [exchangeRates, setExchangeRates] = useState({});\n\n  // states specifically for assets and liabilities\n  const [assets, setAssets] = useState(() => {\n    const storedAssets = JSON.parse(localStorage.getItem('assets')) || [{label: '', amount: 0}];\n    console.log('Loaded assets from localStorage: ', storedAssets);\n    return storedAssets;\n  })\n  const [liabilities, setLiabilities] = useState(() => {\n    const storedLiabilities = JSON.parse(localStorage.getItem('liabilities')) || [{label: '', amount: 0}];\n    console.log('Loaded liabilities from localStorage: ', storedLiabilities);\n    return storedLiabilities;\n  })\n\n  // save data to localStorage whenever anything changes\n  useEffect(() => {\n    console.log('Saving assets to localStorage: ', assets);\n    localStorage.setItem('assets', JSON.stringify(assets));\n\n    console.log('Saving liabilities to localStorage: ', liabilities);\n    localStorage.setItem('liabilities', JSON.stringify(liabilities));\n\n    console.log('Saving currency choice to localStorage: ', selectedCurrency);\n    localStorage.setItem('chosenCurrency', selectedCurrency);\n  }, [assets, liabilities, selectedCurrency]); // dependency array - this useEffect will run whenever any of the values in the array are changed\n\n  // load exchange rates\n  useEffect(() => {\n    const fetchExchangeRates = async () => {\n      console.log(\"!!!!! The currency being sent to the API is: \", selectedCurrency);\n      const rates = await getExchangeRates(selectedCurrency);\n      if(rates)\n      {\n        setExchangeRates(rates);\n      }\n    };\n\n    fetchExchangeRates();\n  }, [selectedCurrency]); // dependency array - this useEffect will run whenever any of the values in the array are changed\n\n  const updateAmounts = (amounts, rate) => {\n    return amounts.map((amount) => {\n        const parsedAmount = parseFloat(amount); // Parse as float\n        return (parsedAmount * rate).toFixed(2); // Calculate and format to 2 decimal places\n    });\n  };\n\n  const handleCurrencyChange = (e) => {\n    const targetCurrency = e.target.value;\n    setSelectedCurrency(targetCurrency);\n\n    if (exchangeRates[targetCurrency]) {\n        const rate = exchangeRates[targetCurrency];\n        \n        // Update assets\n        const updatedAssets = updateAmounts(assets.map(asset => asset.amount), rate);\n        setAssets(prevAssets => prevAssets.map((asset, index) => ({\n            ...asset,\n            amount: parseFloat(updatedAssets[index]), // Ensure it's a number\n        })));\n\n        // Update liabilities\n        const updatedLiabilities = updateAmounts(liabilities.map(liability => liability.amount), rate);\n        setLiabilities(prevLiabilities => prevLiabilities.map((liability, index) => ({\n            ...liability,\n            amount: parseFloat(updatedLiabilities[index]), // Ensure it's a number\n        })));\n    } else {\n        console.log(\"Exchange rates not available for target currency\");\n    }\n  };\n\n  // assets management\n  const addAsset = () => {\n    setAssets([...assets, {label: '', amount: 0}]);\n  };\n\n  const handleAssetChange = (index, field, value) => {\n    const updatedAssets = [...assets];\n\n    if (field === 'amount') {\n        // Check for valid number input\n        if (value === \"\" || /^[0-9]*(\\.[0-9]{0,2})?$/.test(value)) {\n            const parsedValue = parseFloat(value);\n            updatedAssets[index][field] = isNaN(parsedValue) ? 0 : parseFloat(parsedValue.toFixed(2));\n        }\n    } else {\n        updatedAssets[index][field] = value;\n    }\n\n    setAssets(updatedAssets);\n  };\n\n  // liability management\n  const addLiability = () => {\n    setLiabilities([...liabilities, {label: '', amount: 0}]);\n  };\n\n  const handleLiabilityChange = (index, field, value) => {\n    const updatedLiabilities = [...liabilities];\n\n    if (field === 'amount') {\n        // Check for valid number input\n        if (value === \"\" || /^[0-9]*(\\.[0-9]{0,2})?$/.test(value)) {\n            const parsedValue = parseFloat(value);\n            updatedLiabilities[index][field] = isNaN(parsedValue) ? 0 : parseFloat(parsedValue.toFixed(2));\n        }\n    } else {\n        updatedLiabilities[index][field] = value;\n    }\n\n    setLiabilities(updatedLiabilities); \n  };  \n\n  // currency symbols\n  const currencySymbolOptions = {\n    CAD: 'C$',\n    USD: '$',\n    EUR: '€',\n    TRY: '₺',\n  };\n  const currencySymbol = currencySymbolOptions[selectedCurrency];\n\n  // calculate the sum\n  const sumAssets = assets.reduce((acc, curr) => acc + parseFloat(curr.amount || 0), 0);\n  const sumLiabilities = liabilities.reduce((acc, curr) => acc + parseFloat(curr.amount || 0), 0);\n\n  const netWorth = (isNaN(sumAssets) ? 0 : sumAssets) - (isNaN(sumLiabilities) ? 0 : sumLiabilities);\n\n  console.log(\"Assets are: \", sumAssets);\n  console.log(\"Liabilities are: \", sumLiabilities);\n  console.log(\"Net worth is: \", netWorth);\n\n  return (\n    <div>\n      <h1>{strings.pageTitle}</h1>\n\n      {/* Currency drop down */}\n      <div className=\"topRight\">\n        <label htmlFor=\"currency\">{strings.currencyLabel}</label>\n        <select\n          name=\"currency\"\n          id=\"currency\"\n          value={selectedCurrency}\n          onChange={handleCurrencyChange}\n        >\n          <option value=\"CAD\">{strings.cad}</option>\n          <option value=\"USD\">{strings.usd}</option>\n          <option value=\"EUR\">{strings.eur}</option>\n          <option value=\"TRY\">{strings.try}</option>\n        </select>\n      </div>\n\n      {/* Tables for Assets and Liabilities */}\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <form id = \"assetForm\">\n                <table id = \"assetTable\">\n                  <thead>\n                    <tr>\n                      <th>{strings.assetTitle}</th>\n                      <th>{strings.amountTitle}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {assets.map((asset, index) =>(\n                      <tr key={index}>\n                        <td>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Asset\"\n                            value={asset.label}\n                            onChange={(e) => handleAssetChange(index, 'label', e.target.value)}\n                          />\n                        </td>\n                        <td>\n                          <input\n                            type=\"number\"\n                            placeholder=\"0.00\"\n                            step=\"0.01\"\n                            value={(asset.amount || '')}\n                            onChange={(e) => handleAssetChange(index, 'amount', e.target.value)}\n                          />\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                <h4>{strings.assetsSum}{currencySymbol}{sumAssets.toFixed(2)}</h4>\n                <button type = \"button\" onClick={addAsset}>{strings.addAssetButton}</button>\n              </form>\n            </td>\n            <td>\n              <p>{strings.assetsDescription}</p>\n            </td>\n            <td>\n              <form id = \"liabilityForm\">\n                <table id = \"liabilityTable\">\n                  <thead>\n                    <tr>\n                      <th>{strings.liabilityTitle}</th>\n                      <th>{strings.amountTitle}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {liabilities.map((liability, index) =>(\n                      <tr key={index}>\n                        <td>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Liability\"\n                            value={liability.label}\n                            onChange={(e) => handleLiabilityChange(index, 'label', e.target.value)}\n                          />\n                        </td>\n                        <td>\n                          <input\n                            type=\"number\"\n                            placeholder=\"0.00\"\n                            step=\"0.01\"\n                            value={(liability.amount || '')}\n                            onChange={(e) => handleLiabilityChange(index, 'amount', e.target.value)}\n                          />\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                <h4>{strings.liabilitiesSum}-{currencySymbol}{sumLiabilities.toFixed(2)}</h4>\n                <button type = \"button\" onClick={addLiability}>{strings.addLiabilityButton}</button>\n              </form>\n            </td>\n            <td>\n              <p>{strings.liabilitiesDescription}</p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      {/* Display the sum */}\n      <div>\n        <h2>{strings.netWorth}\n          <span className={netWorth >= 0 ? 'positive' : 'negative'}>{currencySymbol}{netWorth.toFixed(2)}</span></h2>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}