{"ast":null,"code":"var _jsxFileName = \"/Users/caitlincoulombe/GitHub/cecoulombe.github.io/FinanceTracker/finance_tracker_react/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { getExchangeRates } from './currencyApi';\nimport strings from './strings.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // currency state\n  const [selectedCurrency, setSelectedCurrency] = useState(() => {\n    const storedCurrency = localStorage.getItem('chosenCurrency') || 'CAD';\n    console.log('Loaded currency choice from localStorage: ', storedCurrency);\n    return storedCurrency;\n  });\n\n  // exchange rates\n  const [exchangeRates, setExchangeRates] = useState({});\n\n  // states specifically for assets and liabilities\n  const [assets, setAssets] = useState(() => {\n    const storedAssets = JSON.parse(localStorage.getItem('assets')) || [{\n      label: '',\n      amount: 0\n    }];\n    console.log('Loaded assets from localStorage: ', storedAssets);\n    return storedAssets;\n  });\n  const [liabilities, setLiabilities] = useState(() => {\n    const storedLiabilities = JSON.parse(localStorage.getItem('liabilities')) || [{\n      label: '',\n      amount: 0\n    }];\n    console.log('Loaded liabilities from localStorage: ', storedLiabilities);\n    return storedLiabilities;\n  });\n\n  // save data to localStorage whenever anything changes\n  useEffect(() => {\n    console.log('Saving assets to localStorage: ', assets);\n    localStorage.setItem('assets', JSON.stringify(assets));\n    console.log('Saving liabilities to localStorage: ', liabilities);\n    localStorage.setItem('liabilities', JSON.stringify(liabilities));\n    console.log('Saving currency choice to localStorage: ', selectedCurrency);\n    localStorage.setItem('chosenCurrency', selectedCurrency);\n  }, [assets, liabilities, selectedCurrency]); // dependency array - this useEffect will run whenever any of the values in the array are changed\n\n  // load exchange rates\n  useEffect(() => {\n    const fetchExchangeRates = async () => {\n      console.log(\"!!!!! The currency being sent to the API is: \", selectedCurrency);\n      const rates = await getExchangeRates(selectedCurrency);\n      if (rates) {\n        setExchangeRates(rates);\n      }\n    };\n    fetchExchangeRates();\n  }, [selectedCurrency]); // dependency array - this useEffect will run whenever any of the values in the array are changed\n\n  const updateAmounts = (amounts, rate) => {\n    return amounts.map(amount => {\n      const parsedAmount = parseFloat(amount); // Parse as float\n      return (parsedAmount * rate).toFixed(2); // Calculate and format to 2 decimal places\n    });\n  };\n  const handleCurrencyChange = e => {\n    const targetCurrency = e.target.value;\n    setSelectedCurrency(targetCurrency);\n    if (exchangeRates[targetCurrency]) {\n      const rate = exchangeRates[targetCurrency];\n\n      // Update assets\n      const updatedAssets = updateAmounts(assets.map(asset => asset.amount), rate);\n      setAssets(prevAssets => prevAssets.map((asset, index) => ({\n        ...asset,\n        amount: parseFloat(updatedAssets[index]) // Ensure it's a number\n      })));\n\n      // Update liabilities\n      const updatedLiabilities = updateAmounts(liabilities.map(liability => liability.amount), rate);\n      setLiabilities(prevLiabilities => prevLiabilities.map((liability, index) => ({\n        ...liability,\n        amount: parseFloat(updatedLiabilities[index]) // Ensure it's a number\n      })));\n    } else {\n      console.log(\"Exchange rates not available for target currency\");\n    }\n  };\n\n  // assets management\n  const addAsset = () => {\n    setAssets([...assets, {\n      label: '',\n      amount: 0\n    }]);\n  };\n  const handleAssetChange = (index, field, value) => {\n    const updatedAssets = [...assets];\n    if (field === 'amount') {\n      // Check for valid number input\n      if (value === \"\" || /^[0-9]*(\\.[0-9]{0,2})?$/.test(value)) {\n        const parsedValue = parseFloat(value);\n        updatedAssets[index][field] = isNaN(parsedValue) ? 0 : parseFloat(parsedValue.toFixed(2));\n      }\n    } else {\n      updatedAssets[index][field] = value;\n    }\n    setAssets(updatedAssets);\n  };\n\n  // liability management\n  const addLiability = () => {\n    setLiabilities([...liabilities, {\n      label: '',\n      amount: 0\n    }]);\n  };\n  const handleLiabilityChange = (index, field, value) => {\n    const updatedLiabilities = [...liabilities];\n    if (field === 'amount') {\n      // Check for valid number input\n      if (value === \"\" || /^[0-9]*(\\.[0-9]{0,2})?$/.test(value)) {\n        const parsedValue = parseFloat(value);\n        updatedLiabilities[index][field] = isNaN(parsedValue) ? 0 : parseFloat(parsedValue.toFixed(2));\n      }\n    } else {\n      updatedLiabilities[index][field] = value;\n    }\n    setLiabilities(updatedLiabilities);\n  };\n\n  // currency symbols\n  const currencySymbolOptions = {\n    CAD: 'C$',\n    USD: '$',\n    EUR: '€',\n    TRY: '₺'\n  };\n  const currencySymbol = currencySymbolOptions[selectedCurrency];\n\n  // calculate the sum\n  const sumAssets = assets.reduce((acc, curr) => acc + parseFloat(curr.amount || 0), 0);\n  const sumLiabilities = liabilities.reduce((acc, curr) => acc + parseFloat(curr.amount || 0), 0);\n  const netWorth = (isNaN(sumAssets) ? 0 : sumAssets) - (isNaN(sumLiabilities) ? 0 : sumLiabilities);\n  console.log(\"Assets are: \", sumAssets);\n  console.log(\"Liabilities are: \", sumLiabilities);\n  console.log(\"Net worth is: \", netWorth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: strings.pageTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topRight\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"currency\",\n        children: strings.currencyLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"currency\",\n        id: \"currency\",\n        value: selectedCurrency,\n        onChange: handleCurrencyChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"CAD\",\n          children: strings.cad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"USD\",\n          children: strings.usd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"EUR\",\n          children: strings.eur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"TRY\",\n          children: strings.try\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"assetForm\",\n              children: [/*#__PURE__*/_jsxDEV(\"table\", {\n                id: \"assetTable\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: strings.assetTitle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: strings.amountTitle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: assets.map((asset, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Asset\",\n                        value: asset.label,\n                        onChange: e => handleAssetChange(index, 'label', e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        placeholder: \"0.00\",\n                        step: \"0.01\",\n                        value: asset.amount || '',\n                        onChange: e => handleAssetChange(index, 'amount', e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 25\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [strings.assetsSum, currencySymbol, sumAssets.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: addAsset,\n                children: strings.addAssetButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: strings.assetsDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"liabilityForm\",\n              children: [/*#__PURE__*/_jsxDEV(\"table\", {\n                id: \"liabilityTable\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: strings.liabilityTitle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: strings.amountTitle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: liabilities.map((liability, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Liability\",\n                        value: liability.label,\n                        onChange: e => handleLiabilityChange(index, 'label', e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        placeholder: \"0.00\",\n                        step: \"0.01\",\n                        value: liability.amount || '',\n                        onChange: e => handleLiabilityChange(index, 'amount', e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 25\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [strings.liabilitiesSum, \"-\", currencySymbol, sumLiabilities.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: addLiability,\n                children: strings.addLiabilityButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: strings.liabilitiesDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [strings.netWorth, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: netWorth >= 0 ? 'positive' : 'negative',\n          children: [currencySymbol, netWorth.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+ShnEjDjMMBl+55ZKQ0xJgfr8nc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getExchangeRates","strings","jsxDEV","_jsxDEV","App","_s","selectedCurrency","setSelectedCurrency","storedCurrency","localStorage","getItem","console","log","exchangeRates","setExchangeRates","assets","setAssets","storedAssets","JSON","parse","label","amount","liabilities","setLiabilities","storedLiabilities","setItem","stringify","fetchExchangeRates","rates","updateAmounts","amounts","rate","map","parsedAmount","parseFloat","toFixed","handleCurrencyChange","e","targetCurrency","target","value","updatedAssets","asset","prevAssets","index","updatedLiabilities","liability","prevLiabilities","addAsset","handleAssetChange","field","test","parsedValue","isNaN","addLiability","handleLiabilityChange","currencySymbolOptions","CAD","USD","EUR","TRY","currencySymbol","sumAssets","reduce","acc","curr","sumLiabilities","netWorth","children","pageTitle","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","currencyLabel","name","id","onChange","cad","usd","eur","try","assetTitle","amountTitle","type","placeholder","step","assetsSum","onClick","addAssetButton","assetsDescription","liabilityTitle","liabilitiesSum","addLiabilityButton","liabilitiesDescription","_c","$RefreshReg$"],"sources":["/Users/caitlincoulombe/GitHub/cecoulombe.github.io/FinanceTracker/finance_tracker_react/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport {getExchangeRates} from './currencyApi';\nimport strings from './strings.js';\n\nfunction App() {\n  // currency state\n  const [selectedCurrency, setSelectedCurrency] = useState(() => {\n    const storedCurrency = localStorage.getItem('chosenCurrency') || ('CAD');\n    console.log('Loaded currency choice from localStorage: ', storedCurrency);\n    return storedCurrency;\n  });\n\n  // exchange rates\n  const [exchangeRates, setExchangeRates] = useState({});\n\n  // states specifically for assets and liabilities\n  const [assets, setAssets] = useState(() => {\n    const storedAssets = JSON.parse(localStorage.getItem('assets')) || [{label: '', amount: 0}];\n    console.log('Loaded assets from localStorage: ', storedAssets);\n    return storedAssets;\n  })\n  const [liabilities, setLiabilities] = useState(() => {\n    const storedLiabilities = JSON.parse(localStorage.getItem('liabilities')) || [{label: '', amount: 0}];\n    console.log('Loaded liabilities from localStorage: ', storedLiabilities);\n    return storedLiabilities;\n  })\n\n  // save data to localStorage whenever anything changes\n  useEffect(() => {\n    console.log('Saving assets to localStorage: ', assets);\n    localStorage.setItem('assets', JSON.stringify(assets));\n\n    console.log('Saving liabilities to localStorage: ', liabilities);\n    localStorage.setItem('liabilities', JSON.stringify(liabilities));\n\n    console.log('Saving currency choice to localStorage: ', selectedCurrency);\n    localStorage.setItem('chosenCurrency', selectedCurrency);\n  }, [assets, liabilities, selectedCurrency]); // dependency array - this useEffect will run whenever any of the values in the array are changed\n\n  // load exchange rates\n  useEffect(() => {\n    const fetchExchangeRates = async () => {\n      console.log(\"!!!!! The currency being sent to the API is: \", selectedCurrency);\n      const rates = await getExchangeRates(selectedCurrency);\n      if(rates)\n      {\n        setExchangeRates(rates);\n      }\n    };\n\n    fetchExchangeRates();\n  }, [selectedCurrency]); // dependency array - this useEffect will run whenever any of the values in the array are changed\n\n  const updateAmounts = (amounts, rate) => {\n    return amounts.map((amount) => {\n        const parsedAmount = parseFloat(amount); // Parse as float\n        return (parsedAmount * rate).toFixed(2); // Calculate and format to 2 decimal places\n    });\n  };\n\n  const handleCurrencyChange = (e) => {\n    const targetCurrency = e.target.value;\n    setSelectedCurrency(targetCurrency);\n\n    if (exchangeRates[targetCurrency]) {\n        const rate = exchangeRates[targetCurrency];\n        \n        // Update assets\n        const updatedAssets = updateAmounts(assets.map(asset => asset.amount), rate);\n        setAssets(prevAssets => prevAssets.map((asset, index) => ({\n            ...asset,\n            amount: parseFloat(updatedAssets[index]), // Ensure it's a number\n        })));\n\n        // Update liabilities\n        const updatedLiabilities = updateAmounts(liabilities.map(liability => liability.amount), rate);\n        setLiabilities(prevLiabilities => prevLiabilities.map((liability, index) => ({\n            ...liability,\n            amount: parseFloat(updatedLiabilities[index]), // Ensure it's a number\n        })));\n    } else {\n        console.log(\"Exchange rates not available for target currency\");\n    }\n  };\n\n  // assets management\n  const addAsset = () => {\n    setAssets([...assets, {label: '', amount: 0}]);\n  };\n\n  const handleAssetChange = (index, field, value) => {\n    const updatedAssets = [...assets];\n\n    if (field === 'amount') {\n        // Check for valid number input\n        if (value === \"\" || /^[0-9]*(\\.[0-9]{0,2})?$/.test(value)) {\n            const parsedValue = parseFloat(value);\n            updatedAssets[index][field] = isNaN(parsedValue) ? 0 : parseFloat(parsedValue.toFixed(2));\n        }\n    } else {\n        updatedAssets[index][field] = value;\n    }\n\n    setAssets(updatedAssets);\n  };\n\n  // liability management\n  const addLiability = () => {\n    setLiabilities([...liabilities, {label: '', amount: 0}]);\n  };\n\n  const handleLiabilityChange = (index, field, value) => {\n    const updatedLiabilities = [...liabilities];\n\n    if (field === 'amount') {\n        // Check for valid number input\n        if (value === \"\" || /^[0-9]*(\\.[0-9]{0,2})?$/.test(value)) {\n            const parsedValue = parseFloat(value);\n            updatedLiabilities[index][field] = isNaN(parsedValue) ? 0 : parseFloat(parsedValue.toFixed(2));\n        }\n    } else {\n        updatedLiabilities[index][field] = value;\n    }\n\n    setLiabilities(updatedLiabilities); \n  };  \n\n  // currency symbols\n  const currencySymbolOptions = {\n    CAD: 'C$',\n    USD: '$',\n    EUR: '€',\n    TRY: '₺',\n  };\n  const currencySymbol = currencySymbolOptions[selectedCurrency];\n\n  // calculate the sum\n  const sumAssets = assets.reduce((acc, curr) => acc + parseFloat(curr.amount || 0), 0);\n  const sumLiabilities = liabilities.reduce((acc, curr) => acc + parseFloat(curr.amount || 0), 0);\n\n  const netWorth = (isNaN(sumAssets) ? 0 : sumAssets) - (isNaN(sumLiabilities) ? 0 : sumLiabilities);\n\n  console.log(\"Assets are: \", sumAssets);\n  console.log(\"Liabilities are: \", sumLiabilities);\n  console.log(\"Net worth is: \", netWorth);\n\n  return (\n    <div>\n      <h1>{strings.pageTitle}</h1>\n\n      {/* Currency drop down */}\n      <div className=\"topRight\">\n        <label htmlFor=\"currency\">{strings.currencyLabel}</label>\n        <select\n          name=\"currency\"\n          id=\"currency\"\n          value={selectedCurrency}\n          onChange={handleCurrencyChange}\n        >\n          <option value=\"CAD\">{strings.cad}</option>\n          <option value=\"USD\">{strings.usd}</option>\n          <option value=\"EUR\">{strings.eur}</option>\n          <option value=\"TRY\">{strings.try}</option>\n        </select>\n      </div>\n\n      {/* Tables for Assets and Liabilities */}\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <form id = \"assetForm\">\n                <table id = \"assetTable\">\n                  <thead>\n                    <tr>\n                      <th>{strings.assetTitle}</th>\n                      <th>{strings.amountTitle}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {assets.map((asset, index) =>(\n                      <tr key={index}>\n                        <td>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Asset\"\n                            value={asset.label}\n                            onChange={(e) => handleAssetChange(index, 'label', e.target.value)}\n                          />\n                        </td>\n                        <td>\n                          <input\n                            type=\"number\"\n                            placeholder=\"0.00\"\n                            step=\"0.01\"\n                            value={(asset.amount || '')}\n                            onChange={(e) => handleAssetChange(index, 'amount', e.target.value)}\n                          />\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                <h4>{strings.assetsSum}{currencySymbol}{sumAssets.toFixed(2)}</h4>\n                <button type = \"button\" onClick={addAsset}>{strings.addAssetButton}</button>\n              </form>\n            </td>\n            <td>\n              <p>{strings.assetsDescription}</p>\n            </td>\n            <td>\n              <form id = \"liabilityForm\">\n                <table id = \"liabilityTable\">\n                  <thead>\n                    <tr>\n                      <th>{strings.liabilityTitle}</th>\n                      <th>{strings.amountTitle}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {liabilities.map((liability, index) =>(\n                      <tr key={index}>\n                        <td>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Liability\"\n                            value={liability.label}\n                            onChange={(e) => handleLiabilityChange(index, 'label', e.target.value)}\n                          />\n                        </td>\n                        <td>\n                          <input\n                            type=\"number\"\n                            placeholder=\"0.00\"\n                            step=\"0.01\"\n                            value={(liability.amount || '')}\n                            onChange={(e) => handleLiabilityChange(index, 'amount', e.target.value)}\n                          />\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                <h4>{strings.liabilitiesSum}-{currencySymbol}{sumLiabilities.toFixed(2)}</h4>\n                <button type = \"button\" onClick={addLiability}>{strings.addLiabilityButton}</button>\n              </form>\n            </td>\n            <td>\n              <p>{strings.liabilitiesDescription}</p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      {/* Display the sum */}\n      <div>\n        <h2>{strings.netWorth}\n          <span className={netWorth >= 0 ? 'positive' : 'negative'}>{currencySymbol}{netWorth.toFixed(2)}</span></h2>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}